#!/bin/bash

SRCLOC="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# overwrite existing resources
cp -f $SRCLOC/../resources/rendering_styles/default.render.xml  $SRCLOC/embeddable-resources/
cp -f $SRCLOC/../resources/routing/routing.xml  $SRCLOC/embeddable-resources/


export LC_ALL=C

bundle="$SRCLOC/src/EmbeddedResources_bundle.cpp"
touch "$bundle"
>| "$bundle"
exec 3> "$bundle"

echo -e "// AUTOGENERATED FILE" >&3
echo -e "#include \"EmbeddedResources.h\"" >&3
echo -e "#include \"EmbeddedResources_private.h\"" >&3
echo -e "namespace OsmAnd {" >&3

resourceCounter=0
rm -f $SRCLOC/embeddable-resources/*.qz

for resource in $SRCLOC/embeddable-resources/* ; do
	echo -n "Packing '$(basename $resource)' "
	originalSize=`stat --printf="%s" $resource`
	echo -n "from $originalSize "

	zlibbedResource=$resource.qz
	perl -MCompress::Zlib -e 'undef $/; print compress(<>, 9)' < $resource > $zlibbedResource
	compressedSize=`stat --printf="%s" $zlibbedResource`
	echo -n "to $compressedSize bytes..."

	echo -e "\tconst QString __bundled_resource_name_$((resourceCounter)) = \"$(basename $resource)\";" >&3
	echo -e "\tconst uint8_t __bundled_resource_data_$((resourceCounter))[] = {" >&3
	echo -e -n "\t\t" >&3
	osb=$((($originalSize&0xff000000)>>24))
	printf "0x%02x, " "$osb" >&3
	osb=$((($originalSize&0x00ff0000)>>16))
	printf "0x%02x, " "$osb" >&3
	osb=$((($originalSize&0x0000ff00)>>8))
	printf "0x%02x, " "$osb" >&3
	osb=$((($originalSize&0x000000ff)>>0))
	printf "0x%02x, " "$osb" >&3
	echo "" >&3
	byteCounter=0
	exec 4<"$zlibbedResource"
	IFS=
	byte=
	while read -u4 -d '' -r -s -n 1 byte
	do
		if [ $((byteCounter%16)) -eq 0 ]; then
			echo -e -n "\t\t" >&3
		fi
		printf "0x%02x, " "'$byte" >&3
		byteCounter=$byteCounter+1
		if [ $((byteCounter%16)) -eq 0 ]; then
			echo "" >&3
		fi
		byte=
	done
	exec 4<&-
	echo "" >&3
	echo -e "\t};" >&3
	echo -e "\tconst size_t __bundled_resource_size_$((resourceCounter)) = 4 + $((byteCounter));" >&3	

	resourceCounter=$resourceCounter+1
	rm -f $zlibbedResource
	echo ""
done
echo -e "\tOsmAnd::EmbeddedResource __bundled_resources[] = {" >&3
for (( resourceIdx=0; resourceIdx<$((resourceCounter)); resourceIdx++ )); do
	echo -e "\t\t{ __bundled_resource_name_$resourceIdx, __bundled_resource_size_$resourceIdx, &__bundled_resource_data_$resourceIdx[0] }," >&3
done
echo -e "\t};" >&3
echo -e "\tuint32_t __bundled_resources_count = $((resourceCounter));" >&3

echo -e "} /* namespace OsmAnd */" >&3
exec 3>&-
