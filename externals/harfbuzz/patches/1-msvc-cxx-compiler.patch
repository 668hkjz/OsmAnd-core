diff --git a/contrib/harfbuzz-unicode.c b/contrib/harfbuzz-unicode.c
index 72c5cf2..3490cbf 100644
--- a/contrib/harfbuzz-unicode.c
+++ b/contrib/harfbuzz-unicode.c
@@ -65,7 +65,7 @@ utf16_to_code_point_prev(const uint16_t *chars, size_t len, ssize_t *iter) {
 static int
 script_property_cmp(const void *vkey, const void *vcandidate) {
   const uint32_t key = (uint32_t) (intptr_t) vkey;
-  const struct script_property *candidate = vcandidate;
+  const struct script_property *candidate = (const struct script_property *)vcandidate;
 
   if (key < candidate->range_start) {
     return -1;
@@ -194,7 +194,7 @@ hb_utf16_script_run_prev(unsigned *num_code_points, HB_ScriptItem *output,
 static int
 grapheme_break_property_cmp(const void *vkey, const void *vcandidate) {
   const uint32_t key = (uint32_t) (intptr_t) vkey;
-  const struct grapheme_break_property *candidate = vcandidate;
+  const struct grapheme_break_property *candidate = (const struct grapheme_break_property *)vcandidate;
 
   if (key < candidate->range_start) {
     return -1;
@@ -220,13 +220,13 @@ HB_GetGraphemeClass(HB_UChar32 ch) {
 HB_WordClass
 HB_GetWordClass(HB_UChar32 ch) {
   abort();
-  return 0;
+  return (HB_WordClass)0;
 }
 
 HB_SentenceClass
 HB_GetSentenceClass(HB_UChar32 ch) {
   abort();
-  return 0;
+  return (HB_SentenceClass)0;
 }
 
 void
@@ -238,7 +238,7 @@ HB_GetGraphemeAndLineBreakClass(HB_UChar32 ch, HB_GraphemeClass *gclass, HB_Line
 static int
 mirroring_property_cmp(const void *vkey, const void *vcandidate) {
   const uint32_t key = (uint32_t) (intptr_t) vkey;
-  const struct mirroring_property *candidate = vcandidate;
+  const struct mirroring_property *candidate = (const struct mirroring_property *)vcandidate;
 
   if (key < candidate->a) {
     return -1;
