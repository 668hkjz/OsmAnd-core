diff --git a/tools/configure/configureapp.cpp b/tools/configure/configureapp.cpp
index c81dbaa..114fea4 100644
--- a/tools/configure/configureapp.cpp
+++ b/tools/configure/configureapp.cpp
@@ -1617,16 +1617,9 @@ void Configure::applySpecSpecifics()
         dictionary[ "ICU" ]                 = "qt";
         dictionary[ "CE_CRT" ]              = "yes";
         dictionary[ "LARGE_FILE" ]          = "no";
-        if (dictionary.value("XQMAKESPEC").startsWith("winphone")) {
-            dictionary[ "SQL_SQLITE" ] = "no";
-            dictionary[ "ANGLE" ]           = "no";
-            dictionary[ "OPENGL" ]          = "no";
-            dictionary[ "OPENGL_ES_2" ]     = "no";
-        } else {
-            dictionary[ "ANGLE" ]           = "d3d11";
-            dictionary[ "OPENGL" ]          = "yes";
-            dictionary[ "OPENGL_ES_2" ]     = "yes";
-        }
+        dictionary[ "ANGLE" ]               = "no";
+        dictionary[ "OPENGL" ]              = "no";
+        dictionary[ "OPENGL_ES_2" ]         = "no";
     } else if (dictionary.value("XQMAKESPEC").startsWith("wince")) {
         dictionary[ "STYLE_WINDOWSXP" ]     = "no";
         dictionary[ "STYLE_WINDOWSVISTA" ]  = "no";
diff --git a/qmake/generators/win32/msvc_nmake.cpp b/qmake/generators/win32/msvc_nmake.cpp
index e90bee1..d945d61 100644
--- a/qmake/generators/win32/msvc_nmake.cpp
+++ b/qmake/generators/win32/msvc_nmake.cpp
@@ -181,6 +181,70 @@ NmakeMakefileGenerator::writeMakefile(QTextStream &t)
                   << wpKit << "\\include\\minwin";
                 t << "\nLIB = " << wpSdkLib << ';' << wpKitLib;
                 t << "\nPATH = " << wpSdkBin << ';' << fxc << '\n';
+            } else if (project->isActiveConfig("winrt")) {
+                QString arch = project->first("VCPROJ_ARCH").toQString();
+                if (arch.compare("arm", Qt::CaseInsensitive) == 0)
+                    arch = "/x86_arm";
+                else if (arch.compare("x64", Qt::CaseInsensitive) == 0)
+                    arch = "/x86_amd64";
+                else
+                    arch.clear();
+
+                QStringList paths = QString::fromLocal8Bit(qgetenv("PATH")).split(QLatin1Char(';'));
+
+                // Find location of cl.exe to get VC install dir
+                QString vcInstallDir;
+                foreach (const QString &path, paths) {
+                    if (path.isEmpty())
+                        continue;
+                    if (QFile::exists(path + arch + QString::fromLatin1("/cl.exe")) && QFile::exists(path + "/../vcvarsall.bat")) {
+                        vcInstallDir = QDir::cleanPath(path + QLatin1String("/../"));
+                        break;
+                    }
+                }
+                if (vcInstallDir.isEmpty() || !QFile::exists(vcInstallDir)) {
+                    fprintf(stderr, "Failed to find the Visual Studio installation directory.\n"
+                                    "Check that cl.exe is in your path.\n");
+                    return false;
+                }
+
+                // Find location of Windows SDK
+                QString windowsSdkDir = QString::fromLocal8Bit(qgetenv("WindowsSdkDir"));
+                if(windowsSdkDir.isEmpty() || !QFile::exists(windowsSdkDir)) {
+                    fprintf(stderr, "Failed to find the Windows SDK installation directory.\n"
+                                    "Check WindowsSdkDir environment variable is set correctly.\n");
+                    return false;
+                }
+
+                vcInstallDir = QDir::toNativeSeparators(vcInstallDir);
+                QString vcBinDir = vcInstallDir + "\\bin";
+                QString vcLibDir = vcInstallDir + "\\lib";
+                QString sdkLibDir = windowsSdkDir + "\\Lib\\win8\\um";
+                QString sdkBinDir = windowsSdkDir + "\\Bin\\x86";
+                if (arch == "/x86_arm")
+                {
+                    vcBinDir += "\\x86_arm";
+                    vcLibDir += "\\arm";
+                    sdkLibDir += "\\arm";
+                }
+                else if (arch == "/x86_amd64")
+                {
+                    vcBinDir += "\\x86_amd64";
+                    vcLibDir += "\\amd64";
+                    sdkLibDir += "\\x64";
+                }
+                else
+                {
+                    sdkLibDir += "\\x86";
+                }
+                t << "\nPATH = " << vcBinDir << ";" << sdkBinDir << ";$(PATH)";
+                t << "\nLIB = " << vcLibDir << ";" << sdkLibDir;
+                t << "\nINCLUDE = "
+                    << windowsSdkDir << "\\Include\\shared;"
+                    << windowsSdkDir << "\\Include\\um;"
+                    << windowsSdkDir << "\\Include\\WinRT;"
+                    << vcInstallDir << "\\include;";
+                t << "\n";
             }
         }
         writeNmakeParts(t);
